<UserControl x:Class="MemberSignInSystem.ModernUI.Content.PoolStatus"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vms="clr-namespace:MemberSignInSystem.ModernUI.ViewModels"
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:behaviors="clr-namespace:MemberSignInSystem.ModernUI.Content.Behaviors"
             mc:Ignorable="d" >
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="StackPanel">
                <Setter Property="Margin" Value="0,0,0,4" />
            </Style>
            <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="Padding" Value="0,3" />
            </Style>
            <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                <Setter Property="Padding" Value="0,3" />
            </Style>
            
            <Style x:Key="PoolHeadingSpacer" TargetType="Rectangle">
                <Setter Property="Height" Value="1" />
                <Setter Property="Stretch" Value="Fill" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="StrokeThickness" Value="1" />
                <Setter Property="DataContext" Value="{DynamicResource WindowText}" />
                <Setter Property="Stroke">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <GradientStop Color="Transparent" Offset="0.0" />
                            <GradientStop Color="{Binding Path=Color}" Offset="0.15" />
                            <GradientStop Color="{Binding Path=Color}" Offset="0.85" />
                            <GradientStop Color="Transparent" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <ControlTemplate x:Key="PoolVarTextBoxTemplate" TargetType="TextBox" >
                <Border x:Name="Bd"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                    <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Background" Value="{DynamicResource TransparentBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource TransparentBrush}"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Cursor" Value="Arrow"/>
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="False">
                        <Setter Property="Background" Value="{DynamicResource InputBackground}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}"/>
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="Cursor" Value="IBeam"/>
                    </Trigger>

                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}"/>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Accent}" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsReadOnly" Value="False"/>
                            <Condition Property="IsEnabled" Value="True"/>
                            <Condition Property="IsMouseOver" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}"/>
                        <Setter Property="Foreground" Value="{DynamicResource InputTextHover}"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            
            <DataTemplate x:Key="PoolStatusDataTemplate">
                <StackPanel Margin="0,7,0,7" Orientation="Vertical">
                    <Grid Width="Auto" Margin="0,0,0,5" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="0.5*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.Column="0" Style="{DynamicResource PoolHeadingSpacer}" />
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Text="{Binding PoolName}" Style="{StaticResource Heading2}" Margin="5,0,5,0" />
                        <Rectangle Grid.Column="2" Style="{DynamicResource PoolHeadingSpacer}" />
                    </Grid>
                    <ItemsControl ItemsSource="{Binding PoolVars}" HorizontalAlignment="Stretch">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,2,0,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.5*" />
                                        <ColumnDefinition Width="0.5*" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Margin="10,0" Content="{Binding Name}" FontWeight="Bold" HorizontalAlignment="Right" />
                                    <TextBox Name="PoolVarValueTextBox" Grid.Column="1" Margin="0,0,10,0" Text="{Binding Value}"
                                             IsReadOnly="{Binding Path=DataContext.IsNotInEditMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                             Template="{DynamicResource PoolVarTextBoxTemplate}" HorizontalAlignment="Left" MinWidth="30" />
                                    <!--
                                    <Grid.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.IsInEditMode}" Value="False" >
                                            <Setter TargetName="PoolVarValueTextBox" Property="IsReadOnly" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.IsInEditMode}" Value="True" >
                                            <Setter TargetName="PoolVarValueTextBox" Property="IsReadOnly" Value="False" />
                                        </DataTrigger>
                                    </Grid.Triggers>
                                    -->
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <UserControl.DataContext>
        <vms:PoolStatusViewModel />
    </UserControl.DataContext>

    <ScrollViewer>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Visibility="{Binding IsOpenClosedVisible}">
                <RadioButton Content="Open" IsChecked="{Binding IsPoolOpen}" />
                <RadioButton Content="Closed" Margin="8,0,0,0" IsChecked="{Binding IsPoolClosed}" />
                <ComboBox IsEnabled="{Binding IsPoolClosed}" Margin="8,0,0,0"
                          ItemsSource="{Binding PoolClosureDurationOptions}"
                          DisplayMemberPath="OptionString" SelectedValuePath="ClosureDuration"
                          SelectedValue="{Binding SelectedPoolClosureDuration}"
                          Width="46" />
                <!--behaviors:ComboBoxWidthFromItemsBehavior.ComboBoxWidthFromItems="True"-->
                <TextBlock Text="minutes" Margin="8,0,0,0" FontSize="14" VerticalAlignment="Center"
                           IsEnabled="{Binding IsPoolClosed}" />
            </StackPanel>
            <StackPanel Grid.RowSpan="2" VerticalAlignment="Center" Visibility="{Binding IsPoolClosedSignVisible}" >
                <TextBlock Text="POOL CLOSED" FontSize="36" Foreground="Red" FontWeight="ExtraBold"
                           HorizontalAlignment="Center" VerticalAlignment="Center" />
                <TextBlock Text="{Binding PoolClosedTimerString}" FontSize="36" Foreground="Red" FontWeight="ExtraBold"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Visibility="{Binding IsTimerVisible}" />
            </StackPanel>
            <TextBlock Grid.Row="0" TextWrapping="Wrap" FontSize="14" TextAlignment="Left" HorizontalAlignment="Center"
                       VerticalAlignment="Center" FontWeight="Bold"  Text="{Binding TimeOfLastUpdateString}"
                       Visibility="{Binding IsNotInEditMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <mui:ModernButton Grid.Row="0" IconData="{Binding IconData}"
                          Command="{Binding ToggleEditModeCommand}"
                          ToolTip="{Binding EditButtonToolTip}" Name="RefreshWeatherButton"
                          HorizontalAlignment="Right" VerticalAlignment="Top"
                          WindowChrome.IsHitTestVisibleInChrome="True" />
            <ItemsControl ItemsSource="{DynamicResource PoolStatuses}" ItemTemplate="{DynamicResource PoolStatusDataTemplate}"
                          Grid.Row="1" />
        </Grid>
    </ScrollViewer>
</UserControl>
